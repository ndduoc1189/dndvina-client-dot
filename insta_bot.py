import base64
exec(base64.b64decode('import time
import random
import unicodedata
from services.helper_service import HelperService

def remove_vietnamese_accents(text):
    text = unicodedata.normalize('NFD', text)
    text = ''.join([c for c in text if unicodedata.category(c) != 'Mn'])
    text = text.replace('đ', 'd').replace('Đ', 'D')
    return text

def random_birthday():
    year = random.randint(1994, 2005)
    month = random.randint(1, 12)
    if month == 2:
        day = random.randint(1, 28)
    elif month in [4, 6, 9, 11]:
        day = random.randint(1, 30)
    else:
        day = random.randint(1, 31)
    return day, month, year

def register_instagram_account(ip="10.0.4.36" ):
    helper = HelperService(base_url=f"http://{ip}:9099")
    names="Nguyễn Thị Lan|Trần Thị Hoa|Lê Thị Hương|Phạm Thị Hằng|Hoàng Thị Thu|Huỳnh Thị Mai|Phan Thị Hạnh|Vũ Thị Ngọc|Võ Thị Minh|Đặng Thị Hiền|Bùi Thị Dung|Đỗ Thị Trang|Hồ Thị Phương|Ngô Thị Quyên|Dương Thị Yến|Lý Thị Nhung|Nguyễn Thị Tuyết|Trần Thị Vân|Lê Thị Thanh|Phạm Thị Tâm|Hoàng Thị Hoa|Huỳnh Thị Hương|Phan Thị Hằng|Vũ Thị Thu|Võ Thị Mai|Đặng Thị Hạnh|Bùi Thị Ngọc|Đỗ Thị Minh|Hồ Thị Hiền|Ngô Thị Dung|Dương Thị Trang|Lý Thị Phương|Nguyễn Thị Quyên|Trần Thị Yến|Lê Thị Nhung|Phạm Thị Tuyết|Hoàng Thị Vân|Huỳnh Thị Thanh|Phan Thị Tâm|Vũ Thị Lan|Võ Thị Hoa|Đặng Thị Hương|Bùi Thị Hằng|Đỗ Thị Thu|Hồ Thị Mai|Ngô Thị Hạnh|Dương Thị Ngọc|Lý Thị Minh|Nguyễn Thị Hiền|Trần Thị Dung|Lê Thị Trang|Phạm Thị Phương|Hoàng Thị Quyên|Huỳnh Thị Yến|Phan Thị Nhung|Vũ Thị Tuyết|Võ Thị Vân|Đặng Thị Thanh|Bùi Thị Tâm|Đỗ Thị Lan|Hồ Thị Hoa|Ngô Thị Hương|Dương Thị Hằng|Lý Thị Thu|Nguyễn Thị Mai|Trần Thị Hạnh|Lê Thị Ngọc|Phạm Thị Minh|Hoàng Thị Hiền|Huỳnh Thị Dung|Phan Thị Trang|Vũ Thị Phương|Võ Thị Quyên|Đặng Thị Yến|Bùi Thị Nhung|Đỗ Thị Tuyết|Hồ Thị Vân|Ngô Thị Thanh|Dương Thị Tâm|Lý Thị Lan|Nguyễn Thị Hoa|Trần Thị Hương|Lê Thị Hằng|Phạm Thị Thu|Hoàng Thị Mai|Huỳnh Thị Hạnh|Phan Thị Ngọc|Vũ Thị Minh|Võ Thị Hiền|Đặng Thị Dung|Bùi Thị Trang|Đỗ Thị Phương|Hồ Thị Quyên|Ngô Thị Yến|Dương Thị Nhung|Lý Thị Tuyết|Nguyễn Thị Vân|Trần Thị Thanh|Lê Thị Tâm|Phạm Thị Lan|Hoàng Thị Hoa|Huỳnh Thị Hương|Phan Thị Hằng|Vũ Thị Thu|Võ Thị Mai|Đặng Thị Hạnh|Bùi Thị Ngọc|Đỗ Thị Minh|Hồ Thị Hiền|Ngô Thị Dung|Dương Thị Trang|Lý Thị Phương|Nguyễn Thị Quyên|Trần Thị Yến|Lê Thị Nhung|Phạm Thị Tuyết|Hoàng Thị Vân|Huỳnh Thị Thanh|Phan Thị Tâm|Vũ Thị Lan|Võ Thị Hoa|Đặng Thị Hương|Bùi Thị Hằng|Đỗ Thị Thu|Hồ Thị Mai|Ngô Thị Hạnh|Dương Thị Ngọc|Lý Thị Minh|Nguyễn Thị Hiền|Trần Thị Dung|Lê Thị Trang|Phạm Thị Phương|Hoàng Thị Quyên|Huỳnh Thị Yến|Phan Thị Nhung|Vũ Thị Tuyết|Võ Thị Vân|Đặng Thị Thanh|Bùi Thị Tâm|Đỗ Thị Lan|Hồ Thị Hoa|Ngô Thị Hương|Dương Thị Hằng|Lý Thị Thu|Nguyễn Thị Mai|Trần Thị Hạnh|Lê Thị Ngọc|Phạm Thị Minh|Hoàng Thị Hiền|Huỳnh Thị Dung|Phan Thị Trang|Vũ Thị Phương|Võ Thị Quyên|Đặng Thị Yến|Bùi Thị Nhung|Đỗ Thị Tuyết|Hồ Thị Vân|Ngô Thị Thanh|Dương Thị Tâm|Lý Thị Lan|Nguyễn Thị Hoa|Trần Thị Hương|Lê Thị Hằng|Phạm Thị Thu|Hoàng Thị Mai|Huỳnh Thị Hạnh|Phan Thị Ngọc|Vũ Thị Minh|Võ Thị Hiền|Đặng Thị Dung|Bùi Thị Trang|Đỗ Thị Phương|Hồ Thị Quyên|Ngô Thị Yến|Dương Thị Nhung|Lý Thị Tuyết|Nguyễn Thị Vân|Trần Thị Thanh|Lê Thị Tâm|Phạm Thị Lan|Hoàng Thị Hoa|Huỳnh Thị Hương|Phan Thị Hằng|Vũ Thị Thu|Võ Thị Mai|Đặng Thị Hạnh|Bùi Thị Ngọc|Đỗ Thị Minh|Hồ Thị Hiền|Ngô Thị Dung|Dương Thị Trang|Lý Thị Phương|Nguyễn Thị Quyên|Trần Thị Yến|Lê Thị Nhung|Phạm Thị Tuyết|Hoàng Thị Vân|Huỳnh Thị Thanh|Phan Thị Tâm|Vũ Thị Lan|Võ Thị Hoa|Đặng Thị Hương|Bùi Thị Hằng|Đỗ Thị Thu|Hồ Thị Mai|Ngô Thị Hạnh|Dương Thị Ngọc|Lý Thị Minh|Nguyễn Thị Hiền|Trần Thị Dung|Lê Thị Trang|Phạm Thị Phương|Hoàng Thị Quyên|Huỳnh Thị Yến|Phan Thị Nhung|Vũ Thị Tuyết|Võ Thị Vân|Đặng Thị Thanh|Bùi Thị Tâm"
    app_package = "com.instagram.android"
    print("[+] Đóng app Instagram...")
    helper.close_app(app_package)
    time.sleep(2)
    print("[+] Mở app Instagram...")
    helper.open_app(app_package)
    time.sleep(5)

    # Vào profile
    print("[+] Vào tab Trang cá nhân...")
    for _ in range(3):
        screen_xml = helper.dump_screen_xml()
        profile_tab = helper.find_element_in_xml(screen_xml, content_desc="Trang cá nhân")
        if profile_tab:
            helper.tap_element_center(profile_tab)
            time.sleep(2)
            break
        else:
            helper.swipe_up()
            time.sleep(1)

    # Bấm vào tiêu đề username để mở danh sách tài khoản
    print("[+] Mở danh sách tài khoản...")
    for _ in range(3):
        screen_xml = helper.dump_screen_xml()
        username_title = helper.find_element_in_xml(screen_xml, resource_id="com.instagram.android:id/action_bar_large_title_auto_size")
        if username_title:
            helper.tap_element_center(username_title)
            time.sleep(1)
            break
        else:
            helper.swipe_down()
            time.sleep(1)

    # Bấm Thêm tài khoản
    print("[+] Bấm Thêm tài khoản...")
    for _ in range(3):
        screen_xml = helper.dump_screen_xml()
        add_account = helper.find_element_in_xml(screen_xml, content_desc="Thêm tài khoản Instagram")
        if add_account:
            helper.tap_element_center(add_account)
            time.sleep(2)
            break
        else:
            helper.swipe_up()
            time.sleep(1)

    helper.wait_for_element(text="Tạo tài khoản mới")
    # Bấm Tạo tài khoản mới
    print("[+] Bấm Tạo tài khoản mới...")
    for _ in range(3):
        screen_xml = helper.dump_screen_xml()
        create_account = helper.find_element_in_xml(screen_xml, text="Tạo tài khoản mới")
        if create_account:
            helper.tap_element_center(create_account)
            time.sleep(2)
            break
        else:
            helper.swipe_up()
            time.sleep(1)

    # Sinh thông tin random
    name_list = names.split("|")
    full_name = random.choice(name_list).strip()
    day, month, year = random_birthday()
    base_username = remove_vietnamese_accents(full_name).replace(" ", "").lower()
    base_username = ''.join(c for c in base_username if c.isalnum())
    username = f"{base_username}{day:02d}{month:02d}{str(year)[-2:]}{random.randint(1,99):02d}"
    email = f"{username}@dndvina.com"
    print(f"[+] Thông tin đăng ký: {full_name}, {day:02d}/{month:02d}/{year}, {username}, {email}")

    # Nhập username
    print("[+] Nhập username...")
    for _ in range(3):
        screen_xml = helper.dump_screen_xml()
        username_input = helper.find_element_in_xml(screen_xml, resource_id="com.instagram.android:id/username")
        if not username_input:
            username_input = helper.find_element_in_xml(screen_xml, class_name="android.widget.EditText")
        if username_input:
            helper.tap_element_center(username_input)
            time.sleep(1)
            helper.input_text(username)
            time.sleep(5)
            # Bấm Tiếp
            next_btn = helper.find_element_in_xml(screen_xml, text="Tiếp")
            if next_btn:
                helper.tap_element_center(next_btn)
                time.sleep(2)
            break
        else:
            helper.swipe_up()
            time.sleep(1)

    # Nhập mật khẩu
    print("[+] Nhập mật khẩu...")
    for _ in range(3):
        screen_xml = helper.dump_screen_xml()
        password_input = helper.find_element_in_xml(screen_xml, resource_id="com.instagram.android:id/password")
        if not password_input:
            password_input = helper.find_element_in_xml(screen_xml, class_name="android.widget.EditText")
        if password_input:
            helper.tap_element_center(password_input)
            time.sleep(1)
            helper.input_text("tintin@123")
            time.sleep(3)
            # Bấm Tiếp
            next_btn = helper.find_element_in_xml(screen_xml, text="Tiếp")
            if next_btn:
                helper.tap_element_center(next_btn)
                time.sleep(2)
            break
        else:
            helper.swipe_up()
            time.sleep(1)

    # Bấm thêm email/số điện thoại mới
    print("[+] Bấm Thêm email hoặc số điện thoại mới...")
    for _ in range(3):
        screen_xml = helper.dump_screen_xml()
        add_email_btn = helper.find_element_in_xml(screen_xml, text="Thêm email hoặc số điện thoại mới")
        if add_email_btn:
            helper.tap_element_center(add_email_btn)
            time.sleep(2)
            break
        else:
            helper.swipe_up()
            time.sleep(1)

    # Chuyển sang tab Email
    print("[+] Chuyển sang tab Email...")
    for _ in range(3):
        screen_xml = helper.dump_screen_xml()
        email_tab = helper.find_element_in_xml(screen_xml, text="EMAIL")
        if email_tab:
            helper.tap_element_center(email_tab)
            time.sleep(1)
            break
        else:
            helper.swipe_up()
            time.sleep(1)

    # Nhập email
    print("[+] Nhập email...")
    for _ in range(3):
        screen_xml = helper.dump_screen_xml()
        email_input = helper.find_element_in_xml(screen_xml, class_name="android.widget.EditText")
        if email_input:
            helper.tap_element_center(email_input)
            time.sleep(1)
            helper.input_text(email)
            time.sleep(6)
            # Bấm Tiếp
            next_btn = helper.find_element_in_xml(screen_xml, text="Tiếp")
            if next_btn:
                helper.tap_element_center(next_btn)
                time.sleep(2)
            break
        else:
            helper.swipe_up()
            time.sleep(1)

    print("[+] Đăng ký tài khoản Instagram hoàn tất!")
    return {
        "full_name": full_name,
        "username": username,
        "email": email,
        "birthday": f"{day:02d}/{month:02d}/{year}"
    }

if __name__ == "__main__":
    info = register_instagram_account()
    print("[RESULT]", info)
').decode('utf-8'))
