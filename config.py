import base64
exec(base64.b64decode('IyBD4bqldSBow6xuaCBjaHVuZyBjaG8g4bupbmcgZOG7pW5nCmltcG9ydCBvcwoKIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQojIEPhuqRVIEjDjE5IIEPGoCBC4bqiTiBI4buGIFRI4buQTkcKIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKIyBUaMawIG3hu6VjIGfhu5FjIGPhu6dhIGThu7Egw6FuCkJBU0VfRElSID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCgojIMSQ4buLYSBjaOG7iSBJUCBj4bunYSB0aGnhur90IGLhu4sgxJHDrWNoCiMgU+G7rSBk4bulbmcgIjEyNy4wLjAuMSIga2hpIGNo4bqheSB0csOqbiBjaMOtbmggdGhp4bq/dCBi4buLIChUZXJtdXgpCiMgU+G7rSBk4bulbmcgxJHhu4thIGNo4buJIElQIExBTiAodsOtIGThu6U6ICIxMC4xLjEwLjIzNCIpIGtoaSBjaOG6oXkgdOG7qyBtw6F5IGtow6FjCkRFVklDRV9JUCA9ICIxMjcuMC4wLjEiCgojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiMgQ+G6pFUgSMOMTkggS+G6vlQgTuG7kEkKIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKIyBD4bqldSBow6xuaCBIVFRQIEFQSQpIRUxQRVJfU0VSVklDRV9IVFRQX1BPUlQgPSA5MDk5CkhFTFBFUl9TRVJWSUNFX1VSTCA9IGYiaHR0cDovL3tERVZJQ0VfSVB9OntIRUxQRVJfU0VSVklDRV9IVFRQX1BPUlR9IgoKIyBD4bqldSBow6xuaCBBREIgLSBz4butIGThu6VuZyBjw7luZyDEkeG7i2EgY2jhu4kgSVAgduG7m2kgSFRUUCBBUEkKQURCX0hPU1QgPSBERVZJQ0VfSVAKQURCX1BPUlQgPSA1NTU1CgojIEPhuqV1IGjDrG5oIFByb3h5CkRFRkFVTFRfUFJPWFlfSE9TVCA9ICIxMC4wLjAuNiIgICMgSVAgc2VydmVyIHByb3h5IG3hurdjIMSR4buLbmgKREVGQVVMVF9QUk9YWV9QT1JUID0gOTAzMiAgICAgICAgIyBQb3J0IHNlcnZlciBwcm94eSBt4bq3YyDEkeG7i25oCkRFRkFVTFRfUFJPWFlfU0VSVkVSID0gZiJodHRwOi8ve0RFRkFVTFRfUFJPWFlfSE9TVH06e0RFRkFVTFRfUFJPWFlfUE9SVH0iCgojIFVSTCBk4buLY2ggduG7pSBjbG91ZApDTE9VRF9VUkwgPSAiaHR0cHM6Ly9hcGkuZG5kdmluYS5jb20vdjEvc3RhdHVzIgoKIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQojIEPhuqRVIEjDjE5IIEZJTEUgVsOAIERBVEFCQVNFCiMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KCiMgxJDGsOG7nW5nIGThuqtuIGZpbGUgKHPhu60gZOG7pW5nIMSRxrDhu51uZyBk4bqrbiB0dXnhu4d0IMSR4buRaSkKREVGQVVMVF9DT05GSUdfUEFUSCA9IG9zLnBhdGguam9pbihCQVNFX0RJUiwgImRlZmF1bHRDb25maWcuanNvbiIpCkRCX1BBVEggPSBvcy5wYXRoLmpvaW4oQkFTRV9ESVIsICJkYXRhLmRiIikKCiMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIyBD4bqkVSBIw4xOSCBSRVRSWSBWw4AgVElNRU9VVAojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgojIEPhuqV1IGjDrG5oIHRo4budaSBnaWFuIHJldHJ5ClJFVFJZX0hFTFBFUl9TRVJWSUNFX0lOVEVSVkFMID0gNSAgIyBHacOieQpSRVRSWV9ORVRXT1JLX0lOVEVSVkFMID0gMiAgIyBHacOieQpNQVhfUkVUUllfQ09VTlQgPSAzCgojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiMgREVGQVVMVCBHTE9CQUwgQ09ORklHIC0gU+G6vSDEkcaw4bujYyBsxrB1IHbDoG8gZ2xvYmFsX2NvbmZpZyB0YWJsZQojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgojIEPhuqV1IGjDrG5oIGNodW5nIGNobyBNYWluU2VydmljZSAoY2jhu4kgbmjhu69uZyBjb25maWcgdGjhu7FjIHPhu7EgxJHGsOG7o2Mgc+G7rSBk4bulbmcpCkRFRkFVTFRfR0xPQkFMX0NPTkZJRyA9IHsKICAgICMgPT09IENPTkZJRyDEkMav4buiQyBT4busIEThu6RORyBUUk9ORyBNQUlOU0VSVklDRSA9PT0KICAgICJlbmFibGVkX2FwcHMiOiBbInRpa3RvayIsICJ0aWt0b2syIiwgImluc3RhZ3JhbSIsICJ5b3V0dWJlIl0sICAjIERhbmggc8OhY2ggYXBwcyDEkcaw4bujYyBrw61jaCBob+G6oXQKICAgICJqb2JfY2hlY2tfaW50ZXJ2YWwiOiA1NiwgICMgVGjhu51pIGdpYW4gKGdpw6J5KSBnaeG7r2EgY8OhYyBs4bqnbiBraeG7g20gdHJhIGpvYgogICAgCiAgICAjIENvbmZpZyB0aW1pbmcgKHNlc3Npb24gZHVyYXRpb24gxJHGsOG7o2MgcXXhuqNuIGzDvSBi4bufaSBqb2Itc3BlY2lmaWMgY29uZmlnKQogICAgInNlc3Npb25fY29vbGRvd25fbWludXRlcyI6IDYwLCAgIyBUaOG7nWkgZ2lhbiBuZ2jhu4kgZ2nhu69hIGPDoWMgc2Vzc2lvbiAocGjDunQpCiAgICAiY29vbGRvd25fZ2V0X2pvYl9nb2xpa2UiOiAzMCwgICMgQ29vbGRvd24ga2hpIGtow7RuZyBjw7Mgam9iIEdvTGlrZSAocGjDunQpCiAgICAidW5mb2xsb3dfcGVuYWx0eV9taW51dGVzIjogNzIwLCAgIyBUaOG7nWkgZ2lhbiBwZW5hbHR5IGtoaSBi4buLIHVuZm9sbG93IChwaMO6dCkKICAgIAogICAgIyBDb25maWcgaMOgbmggxJHhu5luZyB2w6AgZGVsYXkKICAgICJhY3Rpb25fZGVsYXlfbWluIjogMiwgICMgRGVsYXkgdOG7kWkgdGhp4buDdSBnaeG7r2EgY8OhYyBow6BuaCDEkeG7mW5nIChnacOieSkKICAgICJhY3Rpb25fZGVsYXlfbWF4IjogOCwgICMgRGVsYXkgdOG7kWkgxJFhIGdp4buvYSBjw6FjIGjDoG5oIMSR4buZbmcgKGdpw6J5KQogICAgImNoZWNrX2ludGVydmFsIjogMC41LCAgIyBTbGVlcCBpbnRlcnZhbCBjaG8gY8OhYyB2w7JuZyBs4bq3cCAoZ2nDonkpCiAgICAKICAgICMgQ29uZmlnIHRocmVzaG9sZCDEkeG7gyBzd2l0Y2ggYWNjb3VudAogICAgInN3aXRjaF9hY2NvdW50X2FmdGVyX2NvbnNlY3V0aXZlX2ZhaWxzIjogMywgICMgU3dpdGNoIHNhdSBuIGzhuqduIHRo4bqldCBi4bqhaSBsacOqbiB0aeG6v3AKICAgICJzd2l0Y2hfYWNjb3VudF9hZnRlcl9ub19qb2JzIjogNSwgICMgU3dpdGNoIHNhdSBuIGzhuqduIGtow7RuZyBjw7Mgam9iIGxpw6puIHRp4bq/cAogICAgCiAgICAjIFRyYWNraW5nIHbDoCByZXNldAogICAgImxhc3RfZGFpbHlfcmVzZXRfZGF0ZSI6ICIiLCAgIyBUcmFjayBuZ8OgeSByZXNldCBjdeG7kWkgY8O5bmcgKGJhY2t3YXJkIGNvbXBhdGliaWxpdHkpCiAgICAibGFzdF9kYWlseV9yZXNldF90aW1lc3RhbXAiOiAwLCAgIyBUcmFjayB0aW1lc3RhbXAgcmVzZXQgY3Xhu5FpIGPDuW5nIChjaMOtbmggeMOhYyBoxqFuKQogICAgImRhaWx5X3Jlc2V0X2hvdXIiOiA3LCAgIyBHaeG7nSByZXNldCBkYWlseSBjb3VudGVycyBow6BuZyBuZ8OgeSAoMC0yMykKICAgIAogICAgIyBNUVRUIHbDoCBzeW5jCiAgICAic3luY19pbnRlcnZhbCI6IDE1LCAgIyBUaOG7nWkgZ2lhbiAoZ2nDonkpIGdp4buvYSBjw6FjIGzhuqduIMSR4buTbmcgYuG7mSBk4buvIGxp4buHdQogICAgCiAgICAjID09PSBDT05GSUcgQ8WoIChjw7MgdGjhu4Mga2jDtG5nIGTDuW5nIG5oxrBuZyBnaeG7ryDEkeG7gyBiYWNrd2FyZCBjb21wYXRpYmlsaXR5KSA9PT0KICAgICMgImpvYl9ob3VyIjogNiwgICMgUkVNT1ZFRDogdHLDuW5nIHbhu5tpIGRhaWx5X3Jlc2V0X2hvdXIKICAgICJtYXhfam9ic19wZXJfZGF5IjogMzAsICAjIFPhu5Egam9iIHThu5FpIMSRYSBt4buXaSBuZ8OgeSAtIFbhuqpOIMSQxq/hu6JDIFPhu6wgROG7pE5HCiAgICAibWF4X2pvYnNfcGVyX3Nlc3Npb24iOiAxMCwgICMgU+G7kSBqb2IgdOG7kWkgxJFhIG3hu5dpIHNlc3Npb24gLSBNT1ZFRCBCQUNLIHRvIGdsb2JhbCBjb25maWcKICAgICMgImRlbGF5X3Bvc3RfdmlkZW9fbWludXRlIjogMTQ0MCwgICMgTU9WRUQ6IGNodXnhu4NuIHbDoG8gYXBwIGNvbmZpZyAoVGlrdG9rSm9iLCBJbnN0YWdyYW1Kb2IpCiAgICAjICJtYXhfdW5mb2xsb3dfYXR0ZW1wdHMiOiAzLCAgIyBSRU1PVkVEOiBraMO0bmcgxJHGsOG7o2Mgc+G7rSBk4bulbmcKICAgICMgInVuZm9sbG93X3BlbmFsdHlfaG91cnMiOiAyNCwgICMgUkVNT1ZFRDogdHLDuW5nIHbhu5tpIHVuZm9sbG93X3BlbmFsdHlfbWludXRlcwogICAgIyAic21hcnRfY2FyZV9lbmFibGVkIjogVHJ1ZSwgICMgUkVNT1ZFRDoga2jDtG5nIHPhu60gZOG7pW5nIG7hu69hCiAgICAjICJzbWFydF9jYXJlX2ludGVydmFsX2hvdXJzIjogMywgICMgUkVNT1ZFRDoga2jDtG5nIHPhu60gZOG7pW5nIG7hu69hCiAgICAjICJzbWFydF9jYXJlX2NoYW5jZV9wZXJjZW50IjogNzAsICAjIFJFTU9WRUQ6IGtow7RuZyBz4butIGThu6VuZyBu4buvYQp9CgojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiMgREVGQVVMVCBHT0xJS0UgQ09ORklHIC0gU+G6vSDEkcaw4bujYyBsxrB1IHbDoG8gZ29saWtlX2NvbmZpZyB0YWJsZQojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgpERUZBVUxUX0dPTElLRV9DT05GSUcgPSB7CiAgICAiYXBpX2Jhc2UiOiAiaHR0cHM6Ly9nYXRld2F5LmdvbGlrZS5uZXQvYXBpIiwKICAgICJpc19hdXRvX2dldF9oZWFkZXJzIjogVHJ1ZSwgICMgTeG6t2MgxJHhu4tuaCB04buxIMSR4buZbmcgbOG6pXkgR29MaWtlIGhlYWRlcnMKICAgICJoZWFkZXJzX3JlZnJlc2hfaW50ZXJ2YWxfaG91cnMiOiAyNCwgICMgTMOgbSBt4bubaSBoZWFkZXJzIG3hu5dpIDI0IGdp4budCn0KCiMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIyBERUZBVUxUIFBST1hZIENPTkZJRyAtIFPhur0gxJHGsOG7o2MgbMawdSB2w6BvIHByb3h5X2NvbmZpZyB0YWJsZQojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgpERUZBVUxUX1BST1hZX0NPTkZJRyA9IHsKICAgICJ1c2VfcHJveHkiOiBGYWxzZSwgICMgTeG6t2MgxJHhu4tuaCBraMO0bmcgc+G7rSBk4bulbmcgcHJveHkKICAgICJwcm94eV9zZXJ2ZXIiOiBERUZBVUxUX1BST1hZX1NFUlZFUiwgICMgU2VydmVyIHByb3h5IG3hurdjIMSR4buLbmggKGNvbmZpZ3VyYWJsZSkKfQoKIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQojIEPhuqRVIEjDjE5IIE1RVFQKIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKIyBD4bqldSBow6xuaCBNUVRUIHNlcnZlcgpERUJVR19NT0RFID0gVHJ1ZSAgIyBDaOG6vyDEkeG7mSBkZWJ1ZwpNT0RFID0gImRldmVsb3BtZW50IiBpZiBERUJVR19NT0RFIGVsc2UgInByb2R1Y3Rpb24iCgojIEPhuqV1IGjDrG5oIE1RVFQgQnJva2VyCk1RVFRfU0VSVkVSUyA9IHsKICAgICJkZXZlbG9wbWVudCI6ICJtcXR0Oi8vbXF0dC5kbmR2aW5hLmNvbTo5MDIwIiwKICAgICJwcm9kdWN0aW9uIjogIm1xdHQ6Ly9tcXR0LmRuZHZpbmEuY29tOjkwMjAiCn0KCiMgQ+G6pXUgaMOsbmgga+G6v3QgbuG7kWkgTVFUVApNUVRUX0NMSUVOVF9JRF9QUkVGSVggPSAiZG5kdmluYV9jbGllbnQiCk1RVFRfVVNFUk5BTUUgPSAiIgpNUVRUX1BBU1NXT1JEID0gIiIKTVFUVF9SRUNPTk5FQ1RfREVMQVkgPSAxICAjIFRo4budaSBnaWFuIGNo4budIChnacOieSkgdHLGsOG7m2Mga2hpIGvhur90IG7hu5FpIGzhuqFpIHNhdSBs4buXaQpNUVRUX01BWF9SRUNPTk5FQ1RfREVMQVkgPSAzMCAgIyBUaOG7nWkgZ2lhbiBjaOG7nSB04buRaSDEkWEgKGdpw6J5KQpNUVRUX1JFUE9SVF9JTlRFUlZBTCA9IDIwICAjIEfhu61pIHJlcG9ydCDEkeG7i25oIGvhu7MgbeG7l2kgMjAgZ2nDonkKCiMgQ+G6pXUgaMOsbmggTVFUVCBUb3BpY3MKTVFUVF9UT1BJQ19DTElFTlRfU1lOQyA9ICJkbmR2aW5hL2NsaWVudC9zeW5jIgpNUVRUX1RPUElDX1NFUlZFUl9UQVNLX1BSRUZJWCA9ICJkbmR2aW5hL3NlcnZlci90YXNrIiAgIyBT4bq9IHRow6ptIC97ZGV2aWNlX2lkfSBraGkgc+G7rSBk4bulbmcKTVFUVF9UT1BJQ19TRVJWRVJfUFJPWFkgPSAiZG5kdmluYS9zZXJ2ZXIvcHJveHkiICAjIFRvcGljIGNobyBjw6FjIHRow7RuZyBiw6FvIGxpw6puIHF1YW4gxJHhur9uIHByb3h5CgojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiMgUkVTVEFSVCBSRVFVSVJFRCBDT05GSUdTIC0gQ8OhYyBjb25maWcga2hpIHRoYXkgxJHhu5VpIGPhuqduIHJlc3RhcnQgc2Vzc2lvbgojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgpSRVNUQVJUX1JFUVVJUkVEX0NPTkZJR1MgPSBbCiAgICAjIEdsb2JhbCBjb25maWdzCiAgICAiZW5hYmxlZF9hcHBzIiwgICMgVGhheSDEkeG7lWkgYXBwIMSRxrDhu6NjIGvDrWNoIGhv4bqhdAogICAgIm1heF9qb2JzX3Blcl9kYXkiLCAgIyBUaGF5IMSR4buVaSBnaeG7m2kgaOG6oW4gam9iIG5nw6B5CiAgICAibWF4X2pvYnNfcGVyX3Nlc3Npb24iLCAgIyBUaGF5IMSR4buVaSBnaeG7m2kgaOG6oW4gam9iIHBoacOqbgogICAgInNlc3Npb25fY29vbGRvd25fbWludXRlcyIsICAjIFRoYXkgxJHhu5VpIHRo4budaSBnaWFuIG5naOG7iSBnaeG7r2Egc2Vzc2lvbiAocmVuYW1lZCB04burIGpvYl9jb29sZG93bl9taW51dGVzKQogICAgImRhaWx5X3Jlc2V0X2hvdXIiLCAgIyBUaGF5IMSR4buVaSBnaeG7nSByZXNldCAodGhheSB0aOG6vyBqb2JfaG91cikKICAgICMgIm1heF91bmZvbGxvd19hdHRlbXB0cyIsICAjIFJFTU9WRUQ6IGtow7RuZyDEkcaw4bujYyBz4butIGThu6VuZwogICAgIyAidW5mb2xsb3dfcGVuYWx0eV9ob3VycyIsICAjIFJFTU9WRUQ6IHRyw7luZyB24bubaSB1bmZvbGxvd19wZW5hbHR5X21pbnV0ZXMKICAgICJ1bmZvbGxvd19wZW5hbHR5X21pbnV0ZXMiLCAgIyBUaGF5IMSR4buVaSB0aOG7nWkgZ2lhbiBwZW5hbHR5IChwaMO6dCkKICAgICMgInNtYXJ0X2NhcmVfZW5hYmxlZCIsICAjIFJFTU9WRUQ6IGtow7RuZyBz4butIGThu6VuZyBu4buvYQogICAgIyAic21hcnRfY2FyZV9pbnRlcnZhbF9ob3VycyIsICAjIFJFTU9WRUQ6IGtow7RuZyBz4butIGThu6VuZyBu4buvYQogICAgIyAic21hcnRfY2FyZV9jaGFuY2VfcGVyY2VudCIsICAjIFJFTU9WRUQ6IGtow7RuZyBz4butIGThu6VuZyBu4buvYQogICAgIyAiZGVsYXlfcG9zdF92aWRlb19taW51dGUiLCAgIyBNT1ZFRDogY2h1eeG7g24gdsOgbyBhcHAgY29uZmlnCiAgICAKICAgICMgTVFUVCB2w6Agc3luYyBjb25maWdzCiAgICAic3luY19pbnRlcnZhbCIsICAjIFRoYXkgxJHhu5VpIHRo4budaSBnaWFuIHN5bmMKICAgIAogICAgIyBHb0xpa2UgY29uZmlncwogICAgImlzX2F1dG9fZ2V0X2hlYWRlcnMiLCAgIyBUaGF5IMSR4buVaSBjxqEgY2jhur8gdOG7sSDEkeG7mW5nIGzhuqV5IEdvTGlrZSBoZWFkZXJzCiAgICAKICAgICMgUHJveHkgY29uZmlncwogICAgInVzZV9wcm94eSIsICAjIELhuq10L3Thuq90IHByb3h5CiAgICAicHJveHlfc2VydmVyIiwgICMgVGhheSDEkeG7lWkgcHJveHkgc2VydmVyCiAgICAKICAgICMgQXBwIHN5bmMgc3RhdHVzCiAgICAiaW5zdGFncmFtX3N5bmNfc3RhdHVzIiwKICAgICJ0aWt0b2tfc3luY19zdGF0dXMiLCAKICAgICJ0aWt0b2syX3N5bmNfc3RhdHVzIiwKICAgICJ5b3V0dWJlX3N5bmNfc3RhdHVzIiwKXQoKIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQojIEJBQ0tXQVJEIENPTVBBVElCSUxJVFkgLSBDw6FjIGNvbnN0YW50IGPFqSDEkeG7gyB0csOhbmggYnJlYWsgZXhpc3RpbmcgY29kZQojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgojIE1hcCBjw6FjIGNvbnN0YW50IGPFqSBzYW5nIGNvbmZpZyBzdHJ1Y3R1cmUgbeG7m2kKRU5BQkxFRF9BUFBTID0gREVGQVVMVF9HTE9CQUxfQ09ORklHWyJlbmFibGVkX2FwcHMiXQpKT0JfQ0hFQ0tfSU5URVJWQUwgPSBERUZBVUxUX0dMT0JBTF9DT05GSUdbImpvYl9jaGVja19pbnRlcnZhbCJdCiMgSk9CX0hPVVIgPSBERUZBVUxUX0dMT0JBTF9DT05GSUdbImpvYl9ob3VyIl0gICMgUkVNT1ZFRDogc+G7rSBk4bulbmcgZGFpbHlfcmVzZXRfaG91cgpERUZBVUxUX0NPT0xET1dOX01JTlVURVMgPSBERUZBVUxUX0dMT0JBTF9DT05GSUdbInNlc3Npb25fY29vbGRvd25fbWludXRlcyJdICAjIMSQw6MgxJHhu5VpIHTDqm4gdOG7qyBqb2JfY29vbGRvd25fbWludXRlcwpNQVhfSk9CU19QRVJfREFZID0gREVGQVVMVF9HTE9CQUxfQ09ORklHWyJtYXhfam9ic19wZXJfZGF5Il0KTUFYX0pPQlNfUEVSX1NFU1NJT04gPSBERUZBVUxUX0dMT0JBTF9DT05GSUdbIm1heF9qb2JzX3Blcl9zZXNzaW9uIl0gICMgTU9WRUQgQkFDSzogxJDDoyBjaHV54buDbiB0cuG7nyBs4bqhaSBnbG9iYWwgY29uZmlnCiMgREVGQVVMVF9ERUxBWV9QT1NUX1ZJREVPX01JTlVURSA9IERFRkFVTFRfR0xPQkFMX0NPTkZJR1siZGVsYXlfcG9zdF92aWRlb19taW51dGUiXSAgIyBNT1ZFRCB0byBhcHAgY29uZmlnCiMgTUFYX1VORk9MTE9XX0FUVEVNUFRTID0gREVGQVVMVF9HTE9CQUxfQ09ORklHWyJtYXhfdW5mb2xsb3dfYXR0ZW1wdHMiXSAgIyBSRU1PVkVEOiBraMO0bmcgc+G7rSBk4bulbmcKIyBVTkZPTExPV19QRU5BTFRZX0hPVVJTID0gREVGQVVMVF9HTE9CQUxfQ09ORklHWyJ1bmZvbGxvd19wZW5hbHR5X2hvdXJzIl0gICMgUkVNT1ZFRDogdHLDuW5nIGzhurdwCiMgU01BUlRfQ0FSRV9FTkFCTEVEID0gREVGQVVMVF9HTE9CQUxfQ09ORklHWyJzbWFydF9jYXJlX2VuYWJsZWQiXSAgIyBSRU1PVkVEOiBraMO0bmcgc+G7rSBk4bulbmcgbuG7r2EKIyBTTUFSVF9DQVJFX0lOVEVSVkFMX0hPVVJTID0gREVGQVVMVF9HTE9CQUxfQ09ORklHWyJzbWFydF9jYXJlX2ludGVydmFsX2hvdXJzIl0gICMgUkVNT1ZFRDoga2jDtG5nIHPhu60gZOG7pW5nIG7hu69hCiMgU01BUlRfQ0FSRV9DSEFOQ0VfUEVSQ0VOVCA9IERFRkFVTFRfR0xPQkFMX0NPTkZJR1sic21hcnRfY2FyZV9jaGFuY2VfcGVyY2VudCJdICAjIFJFTU9WRUQ6IGtow7RuZyBz4butIGThu6VuZyBu4buvYQoKIyBNUVRUIHbDoCBzeW5jIGNvbnN0YW50cwpTWU5DX0lOVEVSVkFMID0gREVGQVVMVF9HTE9CQUxfQ09ORklHWyJzeW5jX2ludGVydmFsIl0KCiMgUHJveHkgY29uc3RhbnRzClVTRV9QUk9YWSA9IERFRkFVTFRfUFJPWFlfQ09ORklHWyJ1c2VfcHJveHkiXQpQUk9YWV9TRVJWRVIgPSBERUZBVUxUX1BST1hZX0NPTkZJR1sicHJveHlfc2VydmVyIl0KCkdPTElLRV9BUElfQkFTRSA9IERFRkFVTFRfR09MSUtFX0NPTkZJR1siYXBpX2Jhc2UiXQpERUZBVUxUX0lTX0FVVE9fR0VUX0dPTElLRV9IRUFERVIgPSBERUZBVUxUX0dPTElLRV9DT05GSUdbImlzX2F1dG9fZ2V0X2hlYWRlcnMiXQ==').decode('utf-8'))
