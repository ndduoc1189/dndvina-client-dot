import base64
exec(base64.b64decode('ZnJvbSB0eXBpbmcgaW1wb3J0IERpY3QsIEFueSwgTGlzdCwgT3B0aW9uYWwKZnJvbSBqb2JzLnRpa3Rva19qb2IgaW1wb3J0IFRpa3Rva0pvYgoKY2xhc3MgVGlrdG9rMkpvYihUaWt0b2tKb2IpOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGRiX3NlcnZpY2UsIGhlbHBlcl9zZXJ2aWNlLCBnb2xpa2Vfc2VydmljZT1Ob25lKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKGRiX3NlcnZpY2UsIGhlbHBlcl9zZXJ2aWNlLCBnb2xpa2Vfc2VydmljZSkKICAgICAgICAjIFRoYXkgxJHhu5VpIHBhY2thZ2UgdGjDoG5oIFRpa1RvayBwaGnDqm4gYuG6o24gZ2xvYmFsL2ludGVybmF0aW9uYWwKICAgICAgICBzZWxmLmFwcF9wYWNrYWdlID0gImNvbS56aGlsaWFvYXBwLm11c2ljYWxseSIKICAgICAgICBzZWxmLmFwcF9uYW1lID0gInRpa3RvazIiCgogICAgIyBPdmVycmlkZSB04bqldCBj4bqjIGPDoWMgcGjGsMahbmcgdGjhu6ljIFVSTCDEkeG7gyBz4butIGThu6VuZyAidGlrdG9rIiB0aGF5IHbDrCAidGlrdG9rMiIKICAgIGRlZiBnZXRfYXBpX2Jhc2VfdXJsKHNlbGYpIC0+IHN0cjoKICAgICAgICAiIiIKICAgICAgICBM4bqleSBVUkwgZ+G7kWMgY+G7p2EgQVBJIEdvTGlrZQogICAgICAgIAogICAgICAgIFJldHVybnM6CiAgICAgICAgICAgIHN0cjogVVJMIGfhu5FjCiAgICAgICAgIiIiCiAgICAgICAgaW1wb3J0IGNvbmZpZwogICAgICAgIHJldHVybiBmIntjb25maWcuR09MSUtFX0FQSV9CQVNFfS90aWt0b2siCiAgICAKICAgIGRlZiBnZXRfYWNjb3VudF91cmwoc2VsZikgLT4gc3RyOgogICAgICAgICIiIgogICAgICAgIEzhuqV5IFVSTCBBUEkgdMOgaSBraG/huqNuIGPhu6dhIEdvTGlrZQogICAgICAgIAogICAgICAgIFJldHVybnM6CiAgICAgICAgICAgIHN0cjogVVJMIEFQSSB0w6BpIGtob+G6o24KICAgICAgICAiIiIKICAgICAgICBpbXBvcnQgY29uZmlnCiAgICAgICAgcmV0dXJuIGYie2NvbmZpZy5HT0xJS0VfQVBJX0JBU0V9L3Rpa3Rvay1hY2NvdW50IgogICAgCiAgICBkZWYgZ2V0X2pvYnNfdXJsKHNlbGYpIC0+IHN0cjoKICAgICAgICAiIiIKICAgICAgICBM4bqleSBVUkwgQVBJIGpvYnMgY+G7p2EgR29MaWtlCiAgICAgICAgCiAgICAgICAgUmV0dXJuczoKICAgICAgICAgICAgc3RyOiBVUkwgQVBJIGpvYnMKICAgICAgICAiIiIKICAgICAgICBpbXBvcnQgY29uZmlnCiAgICAgICAgcmV0dXJuIGYie2NvbmZpZy5HT0xJS0VfQVBJX0JBU0V9L2FkdmVydGlzaW5nL3B1Ymxpc2hlcnMvdGlrdG9rL2pvYnMiCiAgICAKICAgIGRlZiBnZXRfam9iX3JlcG9ydF91cmwoc2VsZiwgam9iX2lkOiBzdHIpIC0+IHN0cjoKICAgICAgICAiIiIKICAgICAgICBM4bqleSBVUkwgQVBJIGLDoW8gY8OhbyBqb2IgY+G7p2EgR29MaWtlCiAgICAgICAgCiAgICAgICAgQXJnczoKICAgICAgICAgICAgam9iX2lkOiBJRCBj4bunYSBqb2IKICAgICAgICAgICAgCiAgICAgICAgUmV0dXJuczoKICAgICAgICAgICAgc3RyOiBVUkwgQVBJIGLDoW8gY8OhbyBqb2IKICAgICAgICAiIiIKICAgICAgICBpbXBvcnQgY29uZmlnCiAgICAgICAgcmV0dXJuIGYie2NvbmZpZy5HT0xJS0VfQVBJX0JBU0V9L3Rpa3Rvay9qb2JzL3tqb2JfaWR9L3JlcG9ydCIKICAgIAogICAgZGVmIGdldF9hY2NvdW50X2xpc3RfdXJsKHNlbGYpIC0+IHN0cjoKICAgICAgICAiIiIKICAgICAgICBM4bqleSBVUkwgQVBJIGRhbmggc8OhY2ggdMOgaSBraG/huqNuCiAgICAgICAgCiAgICAgICAgUmV0dXJuczoKICAgICAgICAgICAgc3RyOiBVUkwgQVBJIGRhbmggc8OhY2ggdMOgaSBraG/huqNuCiAgICAgICAgIiIiCiAgICAgICAgaW1wb3J0IGNvbmZpZwogICAgICAgIHJldHVybiBmIntjb25maWcuR09MSUtFX0FQSV9CQVNFfS90aWt0b2siCiAgICAgICAgCiAgICBkZWYgZ2V0X2FjY291bnRfZGV0YWlsX3VybChzZWxmKSAtPiBzdHI6CiAgICAgICAgIiIiCiAgICAgICAgTOG6pXkgVVJMIEFQSSBjaGkgdGnhur90IHTDoGkga2hv4bqjbgogICAgICAgIAogICAgICAgIFJldHVybnM6CiAgICAgICAgICAgIHN0cjogVVJMIEFQSSBjaGkgdGnhur90IHTDoGkga2hv4bqjbgogICAgICAgICIiIgogICAgICAgIGltcG9ydCBjb25maWcKICAgICAgICByZXR1cm4gZiJ7Y29uZmlnLkdPTElLRV9BUElfQkFTRX0vdGlrdG9rLWFjY291bnQiCiAgICAgICAgCiAgICBkZWYgZ2V0X2pvYl9saXN0X3VybChzZWxmKSAtPiBzdHI6CiAgICAgICAgIiIiCiAgICAgICAgTOG6pXkgVVJMIEFQSSBkYW5oIHPDoWNoIGpvYgogICAgICAgIAogICAgICAgIFJldHVybnM6CiAgICAgICAgICAgIHN0cjogVVJMIEFQSSBkYW5oIHPDoWNoIGpvYgogICAgICAgICIiIgogICAgICAgIGltcG9ydCBjb25maWcKICAgICAgICByZXR1cm4gZiJ7Y29uZmlnLkdPTElLRV9BUElfQkFTRX0vYWR2ZXJ0aXNpbmcvcHVibGlzaGVycy90aWt0b2svam9icyIKICAgIAogICAgZGVmIGdldF9jb21wbGV0ZV9qb2JzX3VybChzZWxmKSAtPiBzdHI6CiAgICAgICAgIiIiCiAgICAgICAgTOG6pXkgVVJMIEFQSSBiw6FvIGPDoW8gam9iIGhvw6BuIHRow6BuaCBj4bunYSBHb0xpa2UKICAgICAgICAKICAgICAgICBSZXR1cm5zOgogICAgICAgICAgICBzdHI6IFVSTCBBUEkgYsOhbyBjw6FvIGpvYiBob8OgbiB0aMOgbmgKICAgICAgICAiIiIKICAgICAgICBpbXBvcnQgY29uZmlnCiAgICAgICAgcmV0dXJuIGYie2NvbmZpZy5HT0xJS0VfQVBJX0JBU0V9L2FkdmVydGlzaW5nL3B1Ymxpc2hlcnMvdGlrdG9rL2NvbXBsZXRlLWpvYnMiCiAgICAKICAgIGRlZiBnZXRfc2tpcF9qb2JzX3VybChzZWxmKSAtPiBzdHI6CiAgICAgICAgIiIiCiAgICAgICAgTOG6pXkgVVJMIEFQSSBza2lwIGpvYnMgY+G7p2EgR29MaWtlCiAgICAgICAgCiAgICAgICAgUmV0dXJuczoKICAgICAgICAgICAgc3RyOiBVUkwgQVBJIHNraXAgam9icwogICAgICAgICIiIgogICAgICAgIGltcG9ydCBjb25maWcKICAgICAgICByZXR1cm4gZiJ7Y29uZmlnLkdPTElLRV9BUElfQkFTRX0vYWR2ZXJ0aXNpbmcvcHVibGlzaGVycy90aWt0b2svc2tpcC1qb2JzIgogICAgCiAgICAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAjIEFQUCBNQU5BR0VNRU5UIE9WRVJSSURFIEZPUiBUSUtUT0syIFBBQ0tBR0UKICAgICMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgIAogICAgZGVmIG9wZW5fYXBwKHNlbGYpIC0+IGJvb2w6CiAgICAgICAgIiIiTeG7nyBUaWtUb2syIGFwcCAocGFja2FnZSBraMOhYyB24bubaSBUaWtUb2spIiIiCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzZWxmLmhlbHBlci5vcGVuX2FwcChzZWxmLmFwcF9wYWNrYWdlKQogICAgICAgICAgICBzZWxmLnNhZmVfc2xlZXAoMykKICAgICAgICAgICAgCiAgICAgICAgICAgICMgS2nhu4NtIHRyYSB4ZW0gYXBwIMSRw6MgbeG7nyBjaMawYQogICAgICAgICAgICBjdXJyZW50X3BhY2thZ2UgPSBzZWxmLmhlbHBlci5nZXRfY3VycmVudF9wYWNrYWdlKCkKICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRfcGFja2FnZSA9PSBzZWxmLmFwcF9wYWNrYWdlCiAgICAgICAgICAgIAogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgc2VsZi5sb2dnZXIuZXJyb3IoZiJM4buXaSBvcGVuX2FwcCBUaWtUb2syOiB7ZX0iKQogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgIAogICAgZGVmIGVuc3VyZV9ob21lX3NjcmVlbihzZWxmKSAtPiBib29sOgogICAgICAgICIiIsSQ4bqjbSBi4bqjbyDEkWFuZyDhu58gbcOgbiBow6xuaCBob21lIFRpa1RvazIgKEZvciBZb3UgdGFiKSIiIgogICAgICAgIHRyeToKICAgICAgICAgICAgIyBCxrDhu5tjIDE6IEtp4buDbSB0cmEgYXBwIGPDsyDEkWFuZyBt4bufIGtow7RuZyAoc+G7rSBk4bulbmcgcGFja2FnZSBj4bunYSBUaWtUb2syKQogICAgICAgICAgICBjdXJyZW50X3BhY2thZ2UgPSBzZWxmLmhlbHBlci5nZXRfY3VycmVudF9wYWNrYWdlKCkKICAgICAgICAgICAgaWYgY3VycmVudF9wYWNrYWdlICE9IHNlbGYuYXBwX3BhY2thZ2U6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5pbmZvKGYiQXBwIFRpa1RvazIgY2jGsGEgbeG7nyAoaGnhu4duIHThuqFpOiB7Y3VycmVudF9wYWNrYWdlfSksIMSRYW5nIG3hu58gYXBwLi4uIikKICAgICAgICAgICAgICAgIGlmIG5vdCBzZWxmLm9wZW5fYXBwKCk6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2dnZXIuZXJyb3IoIktow7RuZyB0aOG7gyBt4bufIFRpa1RvazIgYXBwIikKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAgICAgCiAgICAgICAgICAgICMgQsaw4bubYyAyOiBLaeG7g20gdHJhIHhlbSDEkcOjIOG7nyBob21lIHNjcmVlbiBjaMawYQogICAgICAgICAgICBpZiBzZWxmLmlzX2hvbWVfc2NyZWVuKCk6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5kZWJ1ZygixJDDoyDhu58gbcOgbiBow6xuaCBob21lIFRpa1RvazIgKEZvciBZb3UpIikKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgICAgIAogICAgICAgICAgICAjIELGsOG7m2MgMzogTuG6v3UgY2jGsGEg4bufIGhvbWUgc2NyZWVuLCB0aOG7rSBiYWNrX3RvX2hvbWUgaG/hurdjIHJlc3RhcnQgYXBwCiAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oIkNoxrBhIOG7nyBtw6BuIGjDrG5oIGhvbWUsIMSRYW5nIHRo4butIGJhY2tfdG9faG9tZS4uLiIpCiAgICAgICAgICAgIGlmIG5vdCBzZWxmLmJhY2tfdG9faG9tZSgpOgogICAgICAgICAgICAgICAgc2VsZi5sb2dnZXIud2FybmluZygiYmFja190b19ob21lIHRo4bqldCBi4bqhaSwgdGjhu60gxJHDs25nIHbDoCBt4bufIGzhuqFpIGFwcCIpCiAgICAgICAgICAgICAgICBpZiBub3Qgc2VsZi5fcmVzdGFydF9hcHAoKToKICAgICAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5lcnJvcigiS2jDtG5nIHRo4buDIHJlc3RhcnQgYXBwIikKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICAgICAgCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBzZWxmLmxvZ2dlci5lcnJvcihmIkzhu5dpIGVuc3VyZV9ob21lX3NjcmVlbiBUaWtUb2syOiB7ZX0iKQogICAgICAgICAgICByZXR1cm4gRmFsc2UK').decode('utf-8'))
